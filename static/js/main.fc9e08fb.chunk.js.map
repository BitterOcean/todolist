{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","overflowX","backgroundPositionX","backgroundPositionY","container","backgroundColor","palette","common","white","boxShadow","shadows","todolist","background","paper","icon","margin","spacing","extendedIcon","marginRight","form","App","classes","useState","newItem","setNewItem","checked","setChecked","todoItems","setTodoItems","Grid","alignItems","justify","direction","className","item","Typography","variant","color","align","ListItem","dense","noValidate","autoComplete","TextField","fullWidth","value","onChange","m","target","edge","id","label","required","ListItemSecondaryAction","IconButton","onClick","aria-label","Add","ArrowUpward","ArrowDownward","xs","zeroMinWidth","List","map","labelId","button","currentIndex","indexOf","newChecked","push","splice","Checkbox","tabIndex","disableRipple","inputProps","ListItemText","primary","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9e08fb.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TextField from '@material-ui/core/TextField';\nimport { Add, ArrowDownward, ArrowUpward } from '@material-ui/icons';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width:'100%',\n    height: '100vh',\n    overflowX: 'hidden',\n    backgroundPositionX: '100%',\n    backgroundPositionY: '100%',\n  },\n  container:{\n    width:'40%',\n    height: '80%',\n    overflowX: 'hidden',\n    backgroundColor: theme.palette.common.white,\n    boxShadow:theme.shadows[15],\n  },\n  todolist:{\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  icon: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [newItem, setNewItem] = useState(\"\");\n  const [checked, setChecked] = useState([0]);\n  const [todoItems, setTodoItems] = useState([]);\n\n  return(\n    <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" className={classes.root}>\n      <Grid container alignItems=\"stretch\" className={classes.container}>\n        <Grid item container direction=\"column\" alignItems=\"center\" justify=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\" color=\"textPrimary\" align=\"center\">\n              Todo List\n            </Typography>\n          </Grid>\n          <ListItem dense>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                fullWidth\n                value={newItem}\n                onChange={(m) => setNewItem(m.target.value)}\n                edge=\"begin\"\n                id=\"standard-basic\"\n                label=\"Todo Item\"\n                required\n              />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  onClick={() => setTodoItems([newItem,...todoItems])}\n                  aria-label=\"delete\"\n                >\n                  <Add />\n                  <ArrowUpward />\n                </IconButton>\n                <IconButton\n                  edge=\"end\"\n                  onClick={() => setTodoItems([...todoItems,newItem])}\n                  aria-label=\"delete\"\n                >\n                  <ArrowDownward />\n                  <Add />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </form>\n          </ListItem>\n        </Grid>\n        <Grid item xs={12} zeroMinWidth>\n          <List className={classes.todolist}>\n            {todoItems.map((value) => {\n              const labelId = `${value}`;\n              return (\n                <ListItem\n                  key={value}\n                  dense\n                  button\n                  onClick={() => {\n                    const currentIndex = checked.indexOf(value);\n                    const newChecked = [...checked];\n\n                    if (currentIndex === -1) {\n                      newChecked.push(value);\n                      todoItems.push(todoItems.splice(todoItems.indexOf(labelId), 1)[0]);\n                    }\n                    setChecked(newChecked);\n                  }}>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={checked.indexOf(value) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{ 'aria-labelledby': labelId }}\n                  />\n                  <ListItemText id={labelId} primary={`${value}`} />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      onClick={() => {\n                        const currentIndex = todoItems.indexOf(labelId);\n                        todoItems.splice(currentIndex, 1);\n                        setTodoItems([...todoItems]);// to forceUpdate the page\n                      }}\n                      aria-label=\"delete\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}